import os
import csv
import xmlrpclib
import re


HOST='localhost'
PORT=28069
DB='produccion-05'
USER='admin'
PASS='12345'
url ='http://%s:%d/xmlrpc/' % (HOST,PORT)

common_proxy = xmlrpclib.ServerProxy(url+'common')
object_proxy = xmlrpclib.ServerProxy(url+'object')
uid = common_proxy.login(DB,USER,PASS)

def html_escape(text):
    """Produce entities within text.""" 
    html_escape_table = {
    "&": "&amp;",
    '"': "&quot;",
    "'": "&apos;",
    ">": "&gt;",
    "<": "&lt;",
    }
    return "".join(html_escape_table.get(c,c) for c in text)

def _category(estado):
    if estado is True:
        path_file = '../data/categ.csv'
        archive = csv.DictReader(open(path_file))
        cont = 1
        des = 1
        lis = []
        for field in archive:

            code = html_escape(field["CODIGO"].replace('"', '').replace("'", '').strip())
            catg = html_escape(field["CATEGORIA"].replace('"', '').replace("'", '').strip())
            codigo = str(code).zfill(6)
            cat = catg[0:2]
            asset_id = object_proxy.execute(DB,uid,PASS,'account.asset.asset','search',[('code','=',codigo)])
            
            shop_id = object_proxy.execute(DB,uid,PASS,'account.asset.asset','read',asset_id)
            
            shop_id = shop_id and shop_id[0]['shop_id'][0]
            if shop_id:
                categ_id = object_proxy.execute(DB,uid,PASS,'account.asset.category','search',[('reference','=',cat),('shop_id','=',shop_id)])
                if categ_id:
                    object_proxy.execute(DB,uid,PASS,'account.asset.asset', 'write', asset_id, {'category_id': categ_id[0]})
                    cont = cont+1
                else:
                    des = des+1
                    lis.append(codigo)
        print '<<<< Actualizados >>>>',cont
        print '<<<< Ignorados >>>>',des
        print '<<<< Lista de ignorados >>>>',lis

def _generate(estado):
    
    if estado is True:
        path_file = '../data/activos_2014.csv'
        archive = csv.DictReader(open(path_file))
        cont = 1
        des = 1
        for field in archive:

            code = html_escape(field["CODIGO"].replace('"', '').replace("'", '').strip())
            desc = html_escape(field["DESCRIPCION"].replace('"', '').replace("'", '').strip())
            fcom = html_escape(field["F.COMPRA"].replace('"', '').replace("'", '').strip())
            pcom = float(field["P.COMPRA"].replace('"', '').replace('.', '').replace("'", '').strip())
            dacu = float(field["DEPRE.ACU"].replace('"', '').replace('.', '').replace("'", '').strip())
            vact = float(field["V.ACTUAL"].replace('"', '').replace('.', '').replace("'", '').strip())
            cxde = html_escape(field["CuotaxDeprec"].replace('"', '').replace("'", '').strip())

            codigo = str(code).zfill(6)
            asset_id = object_proxy.execute(DB,uid,PASS,'account.asset.asset','search',[('code','=',codigo)])
            address_id = object_proxy.execute(DB, uid, PASS, 'account.asset.asset', 'compute_depreciation_board', asset_id)
            
            #~ if cxde and int(cxde) > 0:
                #~ if asset_id:
                    #~ print 'codigo: ',codigo
                    #~ registro = object_proxy.execute(DB,uid,PASS,'account.asset.asset', 'write', asset_id, {
                                                                                                        #~ 'purchase_value': pcom/100,
                                                                                                        #~ 'salvage_value':dacu/100,
                                                                                                        #~ 'value_residual':vact/100,
                                                                                                        #~ 'purchase_date': '2014-03-01',
                                                                                                        #~ 'method_number':cxde,
                                                                                                        #~ 'date_reference':fcom,
                                                                                                        #~ 'date_incorporation':fcom
                                                                                                            #~ })
                    #~ cont = cont + 1
            #~ else:
                #~ registro1 = object_proxy.execute(DB,uid,PASS,'account.asset.asset', 'write', asset_id, {
                                                                                                        #~ 'purchase_value': pcom/100,
                                                                                                        #~ 'value_residual':vact/100,
                                                                                                        #~ 'date_reference':fcom,
                                                                                                        #~ 'date_incorporation':fcom
                                                                                                            #~ })
#~ 
                #~ des = des+1
        print 'Numero de actualizados: ',cont
        print 'Numero de ignorados: ',des

def update(estado):
    
    if estado is True:
        path_file = '../data/activos_2014.csv'
        archive = csv.DictReader(open(path_file))
        cont = 1
        des = 1
        for field in archive:

            code = html_escape(field["CODIGO"].replace('"', '').replace("'", '').strip())
            codigo = str(code).zfill(6)
            asset_id = object_proxy.execute(DB,uid,PASS,'account.asset.asset','search',[('code','=',codigo)])
            row = object_proxy.execute(DB,uid,PASS,'account.asset.asset','read',asset_id)
            p_compra = row[0]['purchase_value'][0]
            #~ v_actual = row[0]['value_current'][0]
            #~ v_salvag = row[0]['salvage_value'][0]
            
            if asset_id:
                print 'codigo: ',codigo
                registro = object_proxy.execute(DB,uid,PASS,'account.asset.asset', 'write', asset_id, {
                                                                                                    'value_current': 0.00,
                                                                                                    'salvage_value': p_compra,
                                                                                                    'value_residual':0.00,
                                                                                                    'method_number':0,
                                                                                                    'method_period':0,
                                                                                                        })
                print 'codigo: ',registro
                cont = con

def _depreciate(estado):
    lista = ['003200','001030','002504','002865','004465','571005','004464','004470','571009','571008','001565','051005','051002',
'051001','051004','051008','000320','000173','301017','001447','002460','003316','003000','004245','004246','004247',
'003321','004932','001630','001631','001516','001357','371031','373009','371004','371017','371014','371016','002289',
'002088','002090','003207','003716','003720','003721','003722','003723','000643','001777','001918','000485','000393',
'001608','001802','002367','002701','002791','501020','091003','096003','000348','003235','003234','004524','003236',
'000381','004481','000786','002945','003792','004908','004463','001232','004716','004130','004131','004132','004136',
'004137','004999','002934','002937','003074','003346','003347','313005','315004','311008','311017','001664','005739',
'000577','003096','001633','006019','006020','005868','005869','004922','004584','000344','000353','000330','000338',
'011003','011004','003233','000349','004771','004772','004773','004774','004775','004776','004777','004778','004779',
'004780','004781','004782','004783','004784','004785','004786','004787','001759','001758','005182','003398','000512',
'005800','005863','701046','196001','193001','421005','001792','504001','001050','004208','004369','004370','004988',
'003350','005737','003351','005837','005875','003353','347002','001137','341017','344009','004179','004180','004989',
'341002','004110','004111','004112','001363','002665','002866','003317','003660','003666','003809','003822','003824',
'003825','003826','003828','003829','003830','003831','003832','003833','003834','003835','003836','003841','004030',
'004032','004037','004055','004060','004063','004102','004161','004399','005112','005216','005453','005466','005467',
'321019','341021','591003','001342','001343','001659','001660','002815','002821','003107','003194','003349','003421',
'015012','095001','110001','385001','595001','595008','595010','595011','595012','595017','000119','000166','000168',
'000189','000735','000745','000880','000907','000963','001017','001024','001094','001096','001097','001098','001099',
'001101','001102','001103','001104','001133','001166','001663','001865','001882','001884','002007','002147','002181',
'002182','002188','002257','002392','002393','002394','002395','002434','002736','003051','003190','003202','003232',
'003618','003659','003965','003998','004004','004005','004076','004108','004199','004200','004201','004202','004514',
'004515','004516','004517','004561','004562','004578','004579','004607','004661','004728','004751','004887','004895',
'004896','004900','005610','005612','023008','053014','054012','083004','094007','153001','303008','353005','353006',
'374008','383001','564010','573001','596006','701043','000287','000337','001151','001302','001531','001853','002439',
'002790','002914','002915','002916','002917','003386','004478','004479','004897','005181','005606','005607','005865',
'021073','321007','341006','351030','591006','591029','591030','591031','591033','591034','591046','000050','000053',
'000075','000779','000915','000998','001006','001145','001146','001214','002437','002724','002731','003003','003016',
'003199','003220','003221','003417','003422','003461','003467','003947','004275','004277','004560','004592','004705',
'004891','004907','004937','004970','005616','018001','018002','018003','018004','018005','048003','058001','128001',
'188001','321032','000270','000286','000725','000813','001268','001270','001273','001274','001275','001276','001414',
'001490','001491','001538','001539','001540','001552','001564','001585','001623','001624','001625','001626','001627',
'001819','001842','001855','001857','001867','001896','002130','002198','002206','002260','002265','002267','002268',
'002270','002272','002274','002404','002508','002600','002604','002607','002608','002609','002613','002693','002798',
'002800','002801','002868','002919','002979','003049','003050','003071','003072','003145','003146','003148','003150',
'003151','003155','003162','003191','003192','003193','003210','003214','003229','003230','003237','003238','003239',
'003240','003462','003995','004276','004553','004554','004555','004556','004557','004608','004649','004650','004651',
'004664','004675','004714','004738','004972','004980','005005','005210','005256','005257','005258','005259','005311',
'005312','005313','005314','005315','005316','005317','005487','005488','005489','005730','026001','026005','026007',
'026010','026029','026031','026037','026039','026041','076002','076006','096002','096005','136002','136004','136006',
'306002','306003','306004','326009','326010','336004','356005','356007','376008','376010','576001','576002','576004',
'576005','576006','576007','596001','596002','000216','000734','001125','001183','001184','001185','001728','002388',
'002530','003052','003138','003771','004222','004223','004280','004376','004469','004758','004759','004760','004761',
'004816','004843','133007','133011','143002','144002','005284','002066','003581','005285','005286','002581','001288',
'001293','000288','003948','004800','005354','005290','005287','029014','029013','029011','029010','029009','029008',
'000971','000973','000974','000975','000976','000977','000978','000979','000980','079007','079006','369001','029007',
'005127','029006','029015','003560','003499','003498','005289','001474','005174','003495','029005','349001','029004',
'003063','003062','002183','000890','005288','002156','003608','003607','002054','002055','002057','002058','001278',
'002060','002061','002063','002064','003604','002065','003290','431005','431007','431008','437001','437003','437004',
'437005','437006','437009','438001','004087','431001','431004','437011','437014','438002','003523','005576','005577',
'004146','004147','004221','000694','000695','002489','002490','002491','002492','002495','002496','002497',
'002498','002499','002500','002501','002502','002503','431010','431011','002426','002425','002419','002396','002418',
'002421','002422','002423','002427','002428']
    
    if estado is True:

        cont = 1
        for code in lista:
            print 'codigo: ',code
            asset_id = object_proxy.execute(DB,uid,PASS,'account.asset.asset','search',[('code','=',code)])
            print '--------',asset_id
            action_id = object_proxy.execute(DB, uid, PASS, 'account.asset.desincorporate.process', 'action_desincorporate', asset_id,{'active_ids': asset_id })
            print 'Numero: ',cont
            print 'Desincorporacion: ',action_id
            cont = cont+1

def __main__():
    print 'Ha comenzado la actualizacion'
    _generate(False)
    _category(False)
    _depreciate(True)
    print 'Ha finalizado la actualizacion de la tabla'
__main__()

